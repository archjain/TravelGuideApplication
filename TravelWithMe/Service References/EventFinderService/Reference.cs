//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TravelWithMe.EventFinderService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EventFinderService.IEventFinder")]
    public interface IEventFinder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventFinder/getCurrentEvents", ReplyAction="http://tempuri.org/IEventFinder/getCurrentEventsResponse")]
        string[] getCurrentEvents(string cityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventFinder/getCurrentEvents", ReplyAction="http://tempuri.org/IEventFinder/getCurrentEventsResponse")]
        System.Threading.Tasks.Task<string[]> getCurrentEventsAsync(string cityName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventFinderChannel : TravelWithMe.EventFinderService.IEventFinder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventFinderClient : System.ServiceModel.ClientBase<TravelWithMe.EventFinderService.IEventFinder>, TravelWithMe.EventFinderService.IEventFinder {
        
        public EventFinderClient() {
        }
        
        public EventFinderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventFinderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventFinderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventFinderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] getCurrentEvents(string cityName) {
            return base.Channel.getCurrentEvents(cityName);
        }
        
        public System.Threading.Tasks.Task<string[]> getCurrentEventsAsync(string cityName) {
            return base.Channel.getCurrentEventsAsync(cityName);
        }
    }
}
